{"version":3,"sources":["components/Carro.js","components/Formulario.js","App.js","index.js"],"names":["Carro","carro","handleSelected","className","Card","src","imagen","alt","nombre","precioPorDia","pasajeros","puertas","transmision","Button","onClick","id","Formulario","selected","fechaInicioRenta","handleFechaInicioRenta","fechaHoy","fechaFinRenta","handleFechaFinRenta","diasRenta","handleIntentoAlquiler","type","value","onChange","min","required","variant","testCarros","fechasRentadas","Date","toISOString","slice","difEnDias","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","App","resultadoAlquiler","useState","showFormulario","setShowFormulario","showHistorial","setShowHistorial","setSelected","carros","setCarros","setFechaInicioRenta","setFechaFinRenta","setDiasRenta","mostrarResultadoAlquiler","setMostrarResultadoAlquiler","alquilerValido","setAlquilerValido","historial","setHistorial","handleFormularioClose","handleAlquileresClose","carroSeleccionado","find","Alert","role","Heading","Container","Row","map","Modal","show","onHide","Header","closeButton","Title","Body","event","fechaInicio","target","fechaFin","alert","fechasAlquiladas","start","end","startDate","endDate","arr","dt","setDate","push","v","getFechasIntermedias","alquilerLibre","fecha","includes","nuevoCarro","registroHistorial","costo","concat","Footer","length","Table","scope","alquiler","indice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d6184e5.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Carro = ({ carro, handleSelected }) => {\n  return (\n    <div key={carro.id} className=\"col-md-4 text-center my-2\">\n      <Card className=\"bg-light\">\n        <img\n          src={carro.imagen}\n          className=\"card-img-top img-fluid p-2\"\n          alt=\"Imagen del carro\"\n        ></img>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{carro.nombre}</h5>\n          <p>Precio por dia: ${carro.precioPorDia}</p>\n          <p>Pasajeros: {carro.pasajeros}</p>\n          <p>Puertas: {carro.puertas}</p>\n          <p>Transmisión: {carro.transmision}</p>\n          <Button\n            onClick={handleSelected(carro.id)}\n            className=\"btn btn-primary\"\n          >\n            Alquilar\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Carro;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Formulario = ({\n  selected,\n  fechaInicioRenta,\n  handleFechaInicioRenta,\n  fechaHoy,\n  fechaFinRenta,\n  handleFechaFinRenta,\n  diasRenta,\n  handleIntentoAlquiler,\n}) => {\n  return (\n    <div>\n      <p>Modelo: {selected.nombre}</p>\n      <p>Precio por dia: ${selected.precioPorDia}</p>\n      <p>Pasajeros: {selected.pasajeros}</p>\n      <p>Puertas: {selected.puertas}</p>\n      <p>Transmisión: {selected.transmision}</p>\n      <form>\n        <label>\n          Inicio de la renta:\n          <input\n            type=\"date\"\n            value={fechaInicioRenta}\n            onChange={handleFechaInicioRenta}\n            min={fechaHoy}\n            required\n          ></input>\n        </label>\n        <label>\n          Fin de la renta:\n          <input\n            type=\"date\"\n            value={fechaFinRenta}\n            onChange={handleFechaFinRenta}\n            min={fechaHoy}\n            required\n          ></input>\n        </label>\n        <p>Días de renta: {diasRenta}</p>\n        <p>Costo de renta: ${diasRenta * selected.precioPorDia}</p>\n        <Button variant=\"primary\" onClick={handleIntentoAlquiler}>\n          Rentar\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Formulario;\n","import React, { useState } from \"react\";\n// CSS\nimport \"./App.css\";\n// Bootstrap Imports\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Table from \"react-bootstrap/Table\";\n// Componentes\nimport Carro from \"./components/Carro\";\nimport Formulario from \"./components/Formulario\";\n\n// Carros para probar la funcionalidad\nconst testCarros = [\n  {\n    id: 1,\n    precioPorDia: 5,\n    nombre: \"Hyundai Accent\",\n    pasajeros: 4,\n    puertas: 4,\n    transmision: \"Automatica\",\n    imagen: \"./img/hyundai_accent.png\",\n    fechasRentadas: [],\n  },\n  {\n    id: 2,\n    precioPorDia: 4,\n    nombre: \"Toyota Yaris\",\n    pasajeros: 5,\n    puertas: 4,\n    transmision: \"Automatica\",\n    imagen: \"./img/toyota_yaris.png\",\n    fechasRentadas: [],\n  },\n  {\n    id: 3,\n    precioPorDia: 6,\n    nombre: \"Kia Rio\",\n    pasajeros: 5,\n    puertas: 4,\n    transmision: \"Automatica\",\n    imagen: \"./img/kia_rio.png\",\n    fechasRentadas: [],\n  },\n  {\n    id: 4,\n    precioPorDia: 5,\n    nombre: \"Kia Picanto\",\n    pasajeros: 2,\n    puertas: 2,\n    transmision: \"Automatica\",\n    imagen: \"./img/kia_picanto.png\",\n    fechasRentadas: [],\n  },\n  {\n    id: 5,\n    precioPorDia: 4,\n    nombre: \"Nissan Almera\",\n    pasajeros: 5,\n    puertas: 4,\n    transmision: \"Automatica\",\n    imagen: \"./img/nissan_almera.png\",\n    fechasRentadas: [],\n  },\n  {\n    id: 6,\n    precioPorDia: 6,\n    nombre: \"Hyundai i10\",\n    pasajeros: 5,\n    puertas: 4,\n    transmision: \"Automatica\",\n    imagen: \"./img/hyundai_i10.png\",\n    fechasRentadas: [],\n  },\n];\n\nconst fechaHoy = new Date().toISOString().slice(0, 10);\n\nconst msPorDia = 1000 * 60 * 60 * 24;\n\nconst diasMinimoRenta = 1;\n\n// Retorna la cantidad de días de diferencia en entre 2 días\nfunction difEnDias(a, b) {\n  // Descarta la informacion de zona horaria y de tiempo.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / msPorDia);\n}\n\n//Retorna un arreglo con todas las fechas que existen entre 2 fechas proporcionadas\nfunction getFechasIntermedias(start, end) {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  for (\n    var arr = [], dt = new Date(startDate);\n    dt <= endDate;\n    dt.setDate(dt.getDate() + 1)\n  ) {\n    arr.push(new Date(dt));\n  }\n  let stringArray = arr.map((v) => v.toISOString().slice(0, 10));\n  return stringArray;\n}\n\nconst App = () => {\n  const [showFormulario, setShowFormulario] = useState(false);\n  const [showHistorial, setShowHistorial] = useState(false);\n  const [selected, setSelected] = useState(testCarros[0]);\n  const [carros, setCarros] = useState(testCarros);\n  const [fechaInicioRenta, setFechaInicioRenta] = useState(fechaHoy);\n  const [fechaFinRenta, setFechaFinRenta] = useState(fechaHoy);\n  const [diasRenta, setDiasRenta] = useState(1);\n  const [mostrarResultadoAlquiler, setMostrarResultadoAlquiler] = useState(\n    false\n  );\n  const [alquilerValido, setAlquilerValido] = useState(false);\n  const [historial, setHistorial] = useState([]);\n\n  const handleFormularioClose = () => setShowFormulario(false);\n\n  const handleAlquileresClose = () => setShowHistorial(false);\n\n  const handleMostrarHistorial = () => {\n    setShowHistorial(true);\n  };\n\n  // Método que se encarga de gestionar la lógica de cuando se hace click sobre el botón de alquilar\n  const handleSelected = (id) => () => {\n    const carroSeleccionado = carros.find((carro) => carro.id === id);\n    setFechaInicioRenta(fechaHoy);\n    setFechaFinRenta(fechaHoy);\n    setDiasRenta(diasMinimoRenta);\n    setSelected(carroSeleccionado);\n    setMostrarResultadoAlquiler(false);\n    setShowFormulario(true);\n  };\n\n  // Método que gestiona un intento de alquiler\n  const handleIntentoAlquiler = () => {\n    const fechasSonValidas =\n      new Date(fechaInicioRenta) <= new Date(fechaFinRenta);\n\n    if (fechasSonValidas) {\n      const fechasAlquiladas = getFechasIntermedias(\n        fechaInicioRenta,\n        fechaFinRenta\n      );\n\n      let alquilerLibre = true;\n      // Revisa que no este previamente alquilado para el rango de fechas del alquiler solicitado\n      for (const fecha of fechasAlquiladas) {\n        if (selected.fechasRentadas.includes(fecha)) {\n          alquilerLibre = false;\n          break;\n        }\n      }\n\n      if (alquilerLibre) {\n        const nuevoCarro = { ...selected, fechasRentadas: fechasAlquiladas };\n        setCarros(\n          carros.map((carro) =>\n            carro.id === selected.id ? { ...carro, ...nuevoCarro } : carro\n          )\n        );\n        const registroHistorial = {\n          id: selected.id,\n          nombre: selected.nombre,\n          costo: selected.precioPorDia * diasRenta,\n          fechaInicio: fechaInicioRenta,\n          fechaFin: fechaFinRenta,\n        };\n        setHistorial(historial.concat(registroHistorial));\n        setAlquilerValido(true);\n        setMostrarResultadoAlquiler(true);\n      } else {\n        setAlquilerValido(false);\n        setMostrarResultadoAlquiler(true);\n      }\n    } else {\n      setAlquilerValido(false);\n      setMostrarResultadoAlquiler(true);\n    }\n  };\n\n  // Controla el input de fechas del formulario de alquiler para la fecha de inicio de alquiler\n  const handleFechaInicioRenta = (event) => {\n    const fechaInicio = new Date(event.target.value);\n    const fechaFin = new Date(fechaFinRenta);\n    if (fechaInicio > fechaFin) {\n      alert(\"La fecha es invalida\");\n    } else {\n      setDiasRenta(difEnDias(fechaInicio, fechaFin) + diasMinimoRenta);\n      setFechaInicioRenta(event.target.value);\n    }\n  };\n\n  // Controla el input de fechas del formulario de alquiler para la fecha final de alquiler\n  const handleFechaFinRenta = (event) => {\n    const fechaInicio = new Date(fechaInicioRenta);\n    const fechaFin = new Date(event.target.value);\n    if (fechaInicio > fechaFin) {\n      alert(\"La fecha es invalida\");\n    } else {\n      setDiasRenta(difEnDias(fechaInicio, fechaFin) + diasMinimoRenta);\n      setFechaFinRenta(event.target.value);\n    }\n  };\n\n  // Muestra el mensaje correcto, dependiendo del resultado del intento de alquiler\n  let resultadoAlquiler;\n  if (alquilerValido) {\n    resultadoAlquiler = (\n      <Alert className=\"alert-success\" role=\"alert\">\n        <Alert.Heading>¡Su reserva fue exitosa!</Alert.Heading>\n        <p>Su reserva del {selected.nombre} ha sido completada.</p>\n        <p>\n          Fechas de reserva: {fechaInicioRenta} al {fechaFinRenta}\n        </p>\n        <p>Costo total: ${selected.precioPorDia * diasRenta}</p>\n      </Alert>\n    );\n  } else {\n    resultadoAlquiler = (\n      <Alert className=\"alert-danger\" role=\"alert\">\n        <Alert.Heading>Hubo un problema en su reserva</Alert.Heading>\n        <p>No pudimos completar su reserva del {selected.nombre}</p>\n        <p>\n          Para las fechas del {fechaInicioRenta} al {fechaFinRenta} este carro\n          se encuentra alquilado.\n        </p>\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {/* Contiene el catalogo de carros*/}\n      <Container>\n        <h1 className=\"header\">Alquiler de Vehículos</h1>\n        <Row className=\"justify-content-center\">\n          <Button onClick={handleMostrarHistorial} className=\"text-center\">\n            Mostrar Historial\n          </Button>\n        </Row>\n\n        <Row>\n          {carros.map((carro) => (\n            <Carro\n              key={carro.id}\n              carro={carro}\n              handleSelected={handleSelected}\n            />\n          ))}\n        </Row>\n      </Container>\n\n      {/* Modal responsable del formulario de alquiler*/}\n      <Modal\n        show={showFormulario}\n        onHide={handleFormularioClose}\n        className=\"rent-modal\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Alquilar {selected.nombre}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {mostrarResultadoAlquiler ? (\n            resultadoAlquiler\n          ) : (\n            <Formulario\n              selected={selected}\n              fechaHoy={fechaHoy}\n              fechaInicioRenta={fechaInicioRenta}\n              handleFechaInicioRenta={handleFechaInicioRenta}\n              fechaFinRenta={fechaFinRenta}\n              handleFechaFinRenta={handleFechaFinRenta}\n              diasRenta={diasRenta}\n              handleIntentoAlquiler={handleIntentoAlquiler}\n            />\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleFormularioClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal responsable del historial de alquileres*/}\n      <Modal\n        show={showHistorial}\n        onHide={handleAlquileresClose}\n        className=\"rent-modal\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Historial de Alquiler</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {historial.length > 0 ? (\n            <Table className=\"table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Carro</th>\n                  <th scope=\"col\">Inicio del Alquiler</th>\n                  <th scope=\"col\">Fin del Alquiler</th>\n                  <th scope=\"col\">Costo Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {historial.map((alquiler, indice) => {\n                  return (\n                    <tr key={indice}>\n                      <th scope=\"row\">{alquiler.nombre}</th>\n                      <td>{alquiler.fechaInicio}</td>\n                      <td>{alquiler.fechaFin}</td>\n                      <td>${alquiler.costo}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          ) : (\n            <Alert className=\"alert-info\">\n              Intenta alquilar algún vehículo.\n            </Alert>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleAlquileresClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}